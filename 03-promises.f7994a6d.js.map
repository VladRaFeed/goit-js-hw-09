{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,eACnCE,EAASH,SAASC,cAAc,iBAEhCG,GADYJ,SAASC,cAAc,kBAC5BD,SAASC,cAAc,UAMpC,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KAESC,KAAKC,SAAW,GAIlCJ,EAAQ,C,SAAEH,E,MAAUC,IAIpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAI1BA,EAAM,G,CAOQP,SAASC,cAAc,SAE5CG,EAAKU,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAEF,MAAMC,EAAcC,OAAOf,EAAOgB,OAE5BC,EAAkBF,OAAOnB,EAAWoB,OAEpCE,EAAiBH,OAAOhB,EAAUiB,OAExC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CAMpCjB,EAJiBiB,EAAI,EAEPF,EAAmBE,EAAID,GAENE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MAC/CiB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IACvEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MACpBiB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=delay]')\nconst delayStep = document.querySelector('[name=step]')\nconst amount = document.querySelector('[name=amount]')\nconst createBtn = document.querySelector('.submit_button')\nconst form = document.querySelector('.form');\n\n// createBtn.addEventListener('click', createPromise)\n\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n\n  const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n    \n      resolve({ position, delay })\n      \n    } else {\n      \n      reject({ position, delay })\n      \n  }\n\n    }, delay)\n\n  })\n}\n\n\n\nconst formSubmitEl = document.querySelector('.form')\n  \nform.addEventListener('submit', formSubmit) \n  \nfunction formSubmit(e) {\n  e.preventDefault();\n\n  const amountValue = Number(amount.value);\n\n  const firstDelayValue = Number(firstDelay.value);\n  \n  const delayStepValue = Number(delayStep.value);\n  \n  for (let i = 0; i < amountValue; i++) {\n\n    const position = i + 1\n\n    const delay = firstDelayValue + (i * delayStepValue)\n\n    createPromise(position, delay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    \n  }\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amountValue","Number","value","firstDelayValue","delayStepValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f7994a6d.js.map"}